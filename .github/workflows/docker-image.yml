name: Build Docker Image & Deploy

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          push: true
          build-args: |
            BOT_SECRET=${{ secrets.BOT_SECRET }}
            REMOTE_API_HOST=${{ secrets.REMOTE_API_HOST }}
          tags: ${{ secrets.DOCKER_USERNAME }}/that-chat:prod

  deploy:
    name: "Deploy to production"
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_KEY" > ~/.ssh/production.key
          chmod 600 ~/.ssh/production.key
          cat >>~/.ssh/config <<END
          Host production
            HostName $SSH_HOST
            User $SSH_USER
            IdentityFile ~/.ssh/production.key
            StrictHostKeyChecking no
          END
        env:
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_KEY: ${{ secrets.SSH_KEY }}
          SSH_HOST: ${{ secrets.SSH_HOST }}

      - name: update by docker compose
        run: |
          ssh production "mkdir -p /home/$SSH_USER/that-chat"
          ssh production "cd /home/$SSH_USER/that-chat && /usr/bin/docker-compose pull && /usr/bin/docker-compose up -d"
        env:
          SSH_USER: ${{ secrets.SSH_USER }}